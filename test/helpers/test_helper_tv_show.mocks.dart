// Mocks generated by Mockito 5.0.8 from annotations
// in submission_one_menjadi_flutter_developer_expert_ditonton_app/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;
import 'dart:convert' as _i18;
import 'dart:typed_data' as _i19;

import 'package:dartz/dartz.dart' as _i2;
import 'package:submission_one_menjadi_flutter_developer_expert_ditonton_app/common/failure_equatable.dart' as _i8;
import 'package:submission_one_menjadi_flutter_developer_expert_ditonton_app/data/datasources/db/db_helper.dart' as _i15;
import 'package:submission_one_menjadi_flutter_developer_expert_ditonton_app/data/datasources/tv_local_ds.dart' as _i13;
import 'package:submission_one_menjadi_flutter_developer_expert_ditonton_app/data/datasources/tv_remote_ds.dart'
as _i11;
import 'package:submission_one_menjadi_flutter_developer_expert_ditonton_app/data/models/model_tv_show_detail.dart' as _i3;
import 'package:submission_one_menjadi_flutter_developer_expert_ditonton_app/data/models/model_tv_show.dart' as _i12;
import 'package:submission_one_menjadi_flutter_developer_expert_ditonton_app/data/models/table_tv.dart' as _i14;
import 'package:submission_one_menjadi_flutter_developer_expert_ditonton_app/domain/entities/tv_entities.dart' as _i9;
import 'package:submission_one_menjadi_flutter_developer_expert_ditonton_app/domain/entities/tv_detail.dart' as _i10;
import 'package:submission_one_menjadi_flutter_developer_expert_ditonton_app/domain/repositories/tv_show_repo.dart' as _i6;
import 'package:http/src/base_request.dart' as _i20;
import 'package:http/src/client.dart' as _i17;
import 'package:http/src/response.dart' as _i4;
import 'package:http/src/streamed_response.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite_common/sqlite_api.dart' as _i16;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeTVShowDetailRespon extends _i1.Fake
    implements _i3.ModelTVShowDetailResponse {}

class _FakeTvShowRespon extends _i1.Fake implements _i4.Response {}

class _FakeTvShowStreamedRspon extends _i1.Fake implements _i5.StreamedResponse {}

/// A class which mocks [TVRepository].
///
/// See the documentation for Mockito's code generation for more information.
class TvShowRepoMock extends _i1.Mock implements _i6.TVShowRepo {
  TvShowRepoMock() {
    _i1.throwOnMissingStub(this);
  }
  @override
  _i7.Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>> getNowPlayingAllTVShow() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTV, []),
          returnValue: Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>>.value(
              _FakeEither<_i8.FailureEquitable, List<_i9.TVEntities>>())) as _i7
          .Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>>);
  @override
  _i7.Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>> getPopularAllTVShow() =>
      (super.noSuchMethod(Invocation.method(#getPopularTV, []),
          returnValue: Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>>.value(
              _FakeEither<_i8.FailureEquitable, List<_i9.TVEntities>>())) as _i7
          .Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>>);
  @override
  _i7.Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>> getAllTopRatedTVShow() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTV, []),
          returnValue: Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>>.value(
              _FakeEither<_i8.FailureEquitable, List<_i9.TVEntities>>())) as _i7
          .Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>>);
  @override
  _i7.Future<_i2.Either<_i8.FailureEquitable, _i10.TVShowDetail>> getTVShowDetail(
      int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVDetail, [id]),
          returnValue: Future<_i2.Either<_i8.FailureEquitable, _i10.TVShowDetail>>.value(
              _FakeEither<_i8.FailureEquitable, _i10.TVShowDetail>())) as _i7
          .Future<_i2.Either<_i8.FailureEquitable, _i10.TVShowDetail>>);
  @override
  _i7.Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>> getAllTVShowRecommendations(
      int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVRecommendations, [id]),
          returnValue: Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>>.value(
              _FakeEither<_i8.FailureEquitable, List<_i9.TVEntities>>())) as _i7
          .Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>>);
  @override
  _i7.Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>> searchTVSHow(
      String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTV, [query]),
          returnValue: Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>>.value(
              _FakeEither<_i8.FailureEquitable, List<_i9.TVEntities>>())) as _i7
          .Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>>);
  @override
  _i7.Future<_i2.Either<_i8.FailureEquitable, String>> saveWatchlistTvShow(
      _i10.TVShowDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tv]),
          returnValue: Future<_i2.Either<_i8.FailureEquitable, String>>.value(
              _FakeEither<_i8.FailureEquitable, String>()))
      as _i7.Future<_i2.Either<_i8.FailureEquitable, String>>);
  @override
  _i7.Future<_i2.Either<_i8.FailureEquitable, String>> removeWatchlistTvShow(
      _i10.TVShowDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tv]),
          returnValue: Future<_i2.Either<_i8.FailureEquitable, String>>.value(
              _FakeEither<_i8.FailureEquitable, String>()))
      as _i7.Future<_i2.Either<_i8.FailureEquitable, String>>);
  @override
  _i7.Future<bool> isAddedToWatchlistTvShow(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>> getAllWatchlistTvShow() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTV, []),
          returnValue: Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>>.value(
              _FakeEither<_i8.FailureEquitable, List<_i9.TVEntities>>())) as _i7
          .Future<_i2.Either<_i8.FailureEquitable, List<_i9.TVEntities>>>);
}
/// A class which mocks [TVRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class TVShowRemoteDSMock extends _i1.Mock
    implements _i11.TVRemoteDS {
  TVShowRemoteDSMock() {
    _i1.throwOnMissingStub(this);
  }
  @override
  _i7.Future<List<_i12.ModelTVShow>> getNowPlayingTVShow() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTV, []),
          returnValue:
          Future<List<_i12.ModelTVShow>>.value(<_i12.ModelTVShow>[]))
      as _i7.Future<List<_i12.ModelTVShow>>);
  @override
  _i7.Future<List<_i12.ModelTVShow>> getPopularTVShow() => (super.noSuchMethod(
      Invocation.method(#getPopularTV, []),
      returnValue: Future<List<_i12.ModelTVShow>>.value(<_i12.ModelTVShow>[]))
  as _i7.Future<List<_i12.ModelTVShow>>);
  @override
  _i7.Future<List<_i12.ModelTVShow>> getTopRatedTVShow() => (super.noSuchMethod(
      Invocation.method(#getTopRatedTV, []),
      returnValue: Future<List<_i12.ModelTVShow>>.value(<_i12.ModelTVShow>[]))
  as _i7.Future<List<_i12.ModelTVShow>>);
  @override
  _i7.Future<_i3.ModelTVShowDetailResponse> getTVShowDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVDetail, [id]),
          returnValue: Future<_i3.ModelTVShowDetailResponse>.value(
              _FakeTVShowDetailRespon()))
      as _i7.Future<_i3.ModelTVShowDetailResponse>);
  @override
  _i7.Future<List<_i12.ModelTVShow>> getTVShowRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVRecommendations, [id]),
          returnValue:
          Future<List<_i12.ModelTVShow>>.value(<_i12.ModelTVShow>[]))
      as _i7.Future<List<_i12.ModelTVShow>>);
  @override
  _i7.Future<List<_i12.ModelTVShow>> searchTVShow(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTV, [query]),
          returnValue:
          Future<List<_i12.ModelTVShow>>.value(<_i12.ModelTVShow>[]))
      as _i7.Future<List<_i12.ModelTVShow>>);
}

/// A class which mocks [TVLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class TVShowLocalDSMock extends _i1.Mock
    implements _i13.TVLocalDS {
  TVShowLocalDSMock() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> insertWatchlist(_i14.TableTV? tv) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [tv]),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<String> deleteWatchlistTVShow(_i14.TableTV? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tv]),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i14.TableTV?> getTVShowId(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVById, [id]),
          returnValue: Future<_i14.TableTV?>.value())
      as _i7.Future<_i14.TableTV?>);
  @override
  _i7.Future<List<_i14.TableTV>> getWatchlistTVShow() => (super.noSuchMethod(
      Invocation.method(#getWatchlistTV, []),
      returnValue: Future<List<_i14.TableTV>>.value(<_i14.TableTV>[]))
  as _i7.Future<List<_i14.TableTV>>);
  @override
  _i7.Future<String> addWatchlistTVShow(_i14.TableTV? tv) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlisttv, [tv]),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class DBHelperMock extends _i1.Mock implements _i15.DBHelper {
  DBHelperMock() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i16.Database?> get databaseMov =>
      (super.noSuchMethod(Invocation.getter(#database),
          returnValue: Future<_i16.Database?>.value())
      as _i7.Future<_i16.Database?>);
  @override

  _i7.Future<int> addWatchlistTVShow(_i14.TableTV? tv) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlisttv, [tv]),
          returnValue: Future<int>.value(0)) as _i7.Future<int>);
  @override
  _i7.Future<int> deleteWatchlistTVShow(_i14.TableTV? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlisttv, [tv]),
          returnValue: Future<int>.value(0)) as _i7.Future<int>);
  @override
  _i7.Future<Map<String, dynamic>?> getTVShowId(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVById, [id]),
          returnValue: Future<Map<String, dynamic>?>.value())
      as _i7.Future<Map<String, dynamic>?>);
  @override
  _i7.Future<List<Map<String, dynamic>>> getWatchlistTVShow() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTV, []),
          returnValue: Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[]))
      as _i7.Future<List<Map<String, dynamic>>>);
}
/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class HttpClientTvShowMock extends _i1.Mock implements _i17.Client {
  HttpClientTvShowMock() {
    _i1.throwOnMissingStub(this);
  }
  @override
  _i7.Future<_i4.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
          returnValue: Future<_i4.Response>.value(_FakeTvShowRespon()))
      as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
          returnValue: Future<_i4.Response>.value(_FakeTvShowRespon()))
      as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> post(Uri? url,
      {Map<String, String>? headers,
        Object? body,
        _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
          Invocation.method(#post, [url],
              {#headers: headers, #body: body, #encoding: encoding}),
          returnValue: Future<_i4.Response>.value(_FakeTvShowRespon()))
      as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> put(Uri? url,
      {Map<String, String>? headers,
        Object? body,
        _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
          Invocation.method(#put, [url],
              {#headers: headers, #body: body, #encoding: encoding}),
          returnValue: Future<_i4.Response>.value(_FakeTvShowRespon()))
      as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> patch(Uri? url,
      {Map<String, String>? headers,
        Object? body,
        _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
          Invocation.method(#patch, [url],
              {#headers: headers, #body: body, #encoding: encoding}),
          returnValue: Future<_i4.Response>.value(_FakeTvShowRespon()))
      as _i7.Future<_i4.Response>);
  @override
  _i7.Future<_i4.Response> delete(Uri? url,
      {Map<String, String>? headers,
        Object? body,
        _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
          Invocation.method(#delete, [url],
              {#headers: headers, #body: body, #encoding: encoding}),
          returnValue: Future<_i4.Response>.value(_FakeTvShowRespon()))
      as _i7.Future<_i4.Response>);
  @override
  _i7.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i19.Uint8List> readBytes(Uri? url,
      {Map<String, String>? headers}) =>
      (super.noSuchMethod(
          Invocation.method(#readBytes, [url], {#headers: headers}),
          returnValue: Future<_i19.Uint8List>.value(_i19.Uint8List(0)))
      as _i7.Future<_i19.Uint8List>);
  @override
  _i7.Future<_i5.StreamedResponse> send(_i20.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
          returnValue:
          Future<_i5.StreamedResponse>.value(_FakeTvShowStreamedRspon()))
      as _i7.Future<_i5.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
